{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-sidebar-dropdown-main\\\\src\\\\pages\\\\Upload\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n\n  const [fileInputState, setFileInputState] = useState('');\n  const [previewSource, setPreviewSource] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!selectedFile) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onloadend = () => {\n      uploadImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.error('AHHHHHHHH!!');\n    };\n  };\n\n  const uploadImage = async base64EncodedImage => {\n    try {\n      await axios.post('/api/upload', {\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setFileInputState('');\n      setPreviewSource('');\n      console.log('Image uploaded successfully');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFile,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange,\n        value: fileInputState,\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"chosen\",\n      style: {\n        height: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Upload, \"XX6TEnSCxI9Aaj/bJmtxFDePD+Q=\");\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["F:/react-sidebar-dropdown-main/src/pages/Upload/index.jsx"],"names":["React","useState","axios","Upload","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","handleFileInputChange","e","file","target","files","previewFile","value","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","onerror","console","error","base64EncodedImage","post","body","JSON","stringify","data","headers","log","err","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../../axios';\r\n\r\nexport default function Upload() {\r\n\tconst [fileInputState, setFileInputState] = useState('');\r\n\tconst [previewSource, setPreviewSource] = useState('');\r\n\tconst [selectedFile, setSelectedFile] = useState();\r\n\tconst handleFileInputChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tpreviewFile(file);\r\n\t\tsetSelectedFile(file);\r\n\t\tsetFileInputState(e.target.value);\r\n\t};\r\n\r\n\tconst previewFile = (file) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onloadend = () => {\r\n\t\t\tsetPreviewSource(reader.result);\r\n\t\t};\r\n\t};\r\n\r\n\tconst handleSubmitFile = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!selectedFile) return;\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(selectedFile);\r\n\t\treader.onloadend = () => {\r\n\t\t\tuploadImage(reader.result);\r\n\t\t};\r\n\t\treader.onerror = () => {\r\n\t\t\tconsole.error('AHHHHHHHH!!');\r\n\t\t};\r\n\t};\r\n\r\n\tconst uploadImage = async (base64EncodedImage) => {\r\n\t\ttry {\r\n\t\t\tawait axios.post('/api/upload', {\r\n\t\t\t\tbody: JSON.stringify({ data: base64EncodedImage }),\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t});\r\n\t\t\tsetFileInputState('');\r\n\t\t\tsetPreviewSource('');\r\n\t\t\tconsole.log('Image uploaded successfully');\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"title\">Upload an Image</h1>\r\n\t\t\t<form onSubmit={handleSubmitFile} className=\"form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"fileInput\"\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tname=\"image\"\r\n\t\t\t\t\tonChange={handleFileInputChange}\r\n\t\t\t\t\tvalue={fileInputState}\r\n\t\t\t\t\tclassName=\"form-input\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"btn\" type=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t\t{previewSource && <img src={previewSource} alt=\"chosen\" style={{ height: '300px' }} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}